{"version":3,"file":"index.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["import { list } from \"../main\";\nexport default function createGallery(images) {\n\n    return images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads, id }) => {\n       return `\n        <li class=\"list-item\">\n            <a class=\"list-link\" href=\"${largeImageURL}\">\n                <img data-id=\"${id}\" class=\"image-item\" alt=\"${tags}\" src=\"${webformatURL}\">\n                <div>\n                    <ul>\n                        <li>\n                            <p>Likes<span>${likes}</span></p>\n                        </li>\n                        <li>\n                            <p>Views<span>${views}</span></p>\n                        </li>\n                        <li>\n                            <p>Comments<span>${comments}</span></p>\n                        </li>\n                        <li>\n                            <p>Downloads<span>${downloads}</span></p>\n                        </li>\n                    </ul>\n                </div>\n            </a>\n        </li>\n        `\n    }).join(\"\");\n};\n\n\nexport function clearGallery() {\n    list.innerHTML = \"\";\n}\n\n\nexport function showLoader() {\n\n}\nexport function hideLoader() {\n    \n}","import axios from \"axios\";\nimport { list } from \"../main\";\nimport createGallery from \"./render-functions\";\nimport { clearGallery } from \"./render-functions\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\nconst API_KEY = '51396657-6a58d607ccd7d0682078fb53f';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nlet lightbox;\n\nexport function getImagesByQuery(query) {\n    return axios.get(`?key=${API_KEY}&q=${query}&per_page=9&image_type=photo&orientation=horizontal&safesearch`)\n        .then(res => {\n            const images = res.data.hits;\n\n            clearGallery();\n            const galleryMarkup = createGallery(images);\n            list.innerHTML = galleryMarkup;\n            if (lightbox) {\n                lightbox.refresh();\n            } else {\n                lightbox = new SimpleLightbox('.list-image a', {\n                    captions: true,\n                    captionSelector: 'img',\n                    captionsData: 'alt',\n                    captionPosition: 'bottom',\n                    captionDelay: 250,\n                    fadeSpeed: 100,\n                });\n            }\n            return images;\n    })\n        .catch(error => console.log(error));\n};","import { getImagesByQuery } from \"./js/pixabay-api.js\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nexport const form = document.querySelector(\".form\");\nexport const input = document.querySelector(\".search-input\");\nexport const list = document.querySelector(\".list-image\");\nconst loader = document.querySelector(\".loader\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n    event.preventDefault();\n    const chosedName = input.value.trim().toLowerCase();\n\n    if (!chosedName) {\n        iziToast.warning({\n            title: 'Caution',\n            message: 'Sorry, there are no images matching your search query. Please try again!',\n        });\n        form.reset();\n        return;\n    }\n\n    getImagesByQuery(chosedName)\n        .then(images => {\n            if (!images.length) {\n                iziToast({\n                    message: 'Sorry, there are no images matching your search query. Please try again!'\n                });\n                return;\n            }\n            const matchedImage = images.find((item) =>\n                item.tags.toLowerCase().includes(chosedName)\n            );\n\n            if (!matchedImage) {\n                iziToast({\n                    message: 'Sorry, there are no images matching your search query. Please try again!'\n                })\n            }\n        })\n        .catch(error => {\n            iziToast.error({\n                title: 'Error',\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n            });\n            console.log(error);\n        });\n\n    form.reset();\n};"],"names":["createGallery","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","id","clearGallery","list","API_KEY","axios","lightbox","getImagesByQuery","query","res","galleryMarkup","SimpleLightbox","error","form","input","handleSubmit","event","chosedName","iziToast","item"],"mappings":"owBACe,SAASA,EAAcC,EAAQ,CAE1C,OAAOA,EAAO,IAAI,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,EAAW,GAAAC,CAAE,IACnF;AAAA;AAAA,yCAE2BN,CAAa;AAAA,gCACtBM,CAAE,6BAA6BL,CAAI,UAAUF,CAAY;AAAA;AAAA;AAAA;AAAA,4CAI7CG,CAAK;AAAA;AAAA;AAAA,4CAGLC,CAAK;AAAA;AAAA;AAAA,+CAGFC,CAAQ;AAAA;AAAA;AAAA,gDAGPC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOpD,EAAE,KAAK,EAAE,CACd,CAGO,SAASE,GAAe,CAC3BC,EAAK,UAAY,EACrB,CCzBA,MAAMC,EAAU,qCAChBC,EAAM,SAAS,QAAU,2BAEzB,IAAIC,EAEG,SAASC,EAAiBC,EAAO,CACpC,OAAOH,EAAM,IAAI,QAAQD,CAAO,MAAMI,CAAK,gEAAgE,EACtG,KAAKC,GAAO,CACT,MAAMhB,EAASgB,EAAI,KAAK,KAExBP,EAAY,EACZ,MAAMQ,EAAgBlB,EAAcC,CAAM,EAC1C,OAAAU,EAAK,UAAYO,EACbJ,EACAA,EAAS,QAAO,EAEhBA,EAAW,IAAIK,EAAe,gBAAiB,CAC3C,SAAU,GACV,gBAAiB,MACjB,aAAc,MACd,gBAAiB,SACjB,aAAc,IACd,UAAW,GAC/B,CAAiB,EAEElB,CACf,CAAC,EACI,MAAMmB,GAAS,QAAQ,IAAIA,CAAK,CAAC,CAC1C,CChCO,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQ,SAAS,cAAc,eAAe,EAC9CX,EAAO,SAAS,cAAc,aAAa,EACzC,SAAS,cAAc,SAAS,EAE/CU,EAAK,iBAAiB,SAAUE,CAAY,EAE5C,SAASA,EAAaC,EAAO,CACzBA,EAAM,eAAc,EACpB,MAAMC,EAAaH,EAAM,MAAM,KAAI,EAAG,YAAW,EAEjD,GAAI,CAACG,EAAY,CACbC,EAAS,QAAQ,CACb,MAAO,UACP,QAAS,0EACrB,CAAS,EACDL,EAAK,MAAK,EACV,MACJ,CAEAN,EAAiBU,CAAU,EACtB,KAAKxB,GAAU,CACZ,GAAI,CAACA,EAAO,OAAQ,CAChByB,EAAS,CACL,QAAS,0EAC7B,CAAiB,EACD,MACJ,CACqBzB,EAAO,KAAM0B,GAC9BA,EAAK,KAAK,YAAW,EAAG,SAASF,CAAU,CAC3D,GAGgBC,EAAS,CACL,QAAS,0EAC7B,CAAiB,CAET,CAAC,EACA,MAAMN,GAAS,CACZM,EAAS,MAAM,CACX,MAAO,QACP,QAAS,0EACzB,CAAa,EACD,QAAQ,IAAIN,CAAK,CACrB,CAAC,EAELC,EAAK,MAAK,CACd"}